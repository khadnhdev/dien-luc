<%- include('header', { 
  title: 'Theo dõi Lịch Cúp Điện',
  customStyles: `
    /* Modern UI styles */
    .page-header {
      background: linear-gradient(135deg, var(--primary-color), #0143a3);
      color: white;
      padding: 2rem 0;
      margin-bottom: 2rem;
      border-radius: 0 0 24px 24px;
    }
    
    .page-title {
      font-size: 2rem;
      font-weight: 600;
      margin-bottom: 0.5rem;
    }
    
    .page-subtitle {
      opacity: 0.9;
      font-size: 1.1rem;
    }
    
    .stats-card {
      background: white;
      border-radius: 16px;
      padding: 1.5rem;
      box-shadow: 0 4px 12px rgba(0,0,0,.05);
      display: flex;
      align-items: center;
      gap: 1rem;
    }
    
    .stats-icon {
      width: 48px;
      height: 48px;
      background: var(--primary-color);
      border-radius: 12px;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 1.5rem;
    }
    
    .stats-content strong {
      display: block;
      font-size: 1.25rem;
      margin-bottom: 0.25rem;
    }
    
    /* Developer section */
    .dev-section {
      margin-top: 2rem;
      border-top: 1px dashed #dee2e6;
      padding-top: 2rem;
    }
    
    .dev-header {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      color: #6c757d;
      cursor: pointer;
      padding: 0.5rem 0;
      margin-bottom: 1rem;
      transition: all 0.2s;
    }
    
    .dev-header:hover {
      color: var(--primary-color);
    }
    
    .dev-header i {
      transition: transform 0.2s;
    }
    
    .dev-header.collapsed i {
      transform: rotate(-90deg);
    }
    
    .dev-content {
      background: #f8f9fa;
      border-radius: 12px;
      padding: 1.5rem;
      margin-bottom: 1rem;
    }
    
    .api-key-section {
      display: flex;
      align-items: center;
      gap: 1rem;
      padding: 1rem;
      background: white;
      border-radius: 8px;
      border: 1px solid #e9ecef;
    }
    
    .api-docs-link {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      color: var(--primary-color);
      text-decoration: none;
      font-size: 0.9rem;
      margin-top: 1rem;
    }
    
    .api-docs-link:hover {
      text-decoration: underline;
    }
    
    /* Google ID styles */
    code {
      background: #f8f9fa;
      padding: 0.5rem 1rem;
      border-radius: 6px;
      font-size: 0.9rem;
      color: #495057;
    }
    
    .btn-link {
      color: #6c757d;
      transition: all 0.2s;
    }
    
    .btn-link:hover {
      color: var(--primary-color);
      transform: scale(1.1);
    }
    
    /* Styles riêng cho trang này nếu cần */
    
    /* Schedule Modal styles */
    #scheduleContent {
      max-height: 60vh;
      overflow-y: auto;
    }
    
    .schedule-table th {
      background: #f8f9fa;
      position: sticky;
      top: 0;
      z-index: 1;
    }
    
    .no-data {
      padding: 2rem;
      text-align: center;
      color: #6c757d;
    }
    
    /* Table styles */
    .table td {
      vertical-align: middle;
    }
    
    .table .btn {
      white-space: nowrap;
    }
    
    .table .btn i {
      margin-right: 0.25rem;
    }
    
    /* Responsive styles */
    @media (max-width: 768px) {
      .subscription-steps {
        margin-bottom: 2rem;
      }
      
      .subscription-steps .card {
        margin-bottom: 1rem;
      }
      
      .company-select {
        max-height: 200px;
        overflow-y: auto;
      }
      
      .table-responsive {
        margin: 0 -1rem;
        padding: 0 1rem;
        width: calc(100% + 2rem);
      }
      
      .action-buttons {
        flex-direction: column;
        gap: 0.5rem;
      }
      
      .action-buttons .btn,
      .action-buttons form {
        width: 100%;
      }
      
      #scheduleModal .modal-dialog {
        margin: 0.5rem;
        max-width: none;
      }
    }
    
    /* Desktop enhancements */
    @media (min-width: 769px) {
      .subscription-steps {
        margin: 2rem 0;
      }
      
      .company-select {
        min-height: 300px;
        max-height: 400px;
        overflow-y: auto;
      }
    }
    
    /* Common styles */
    .company-select {
      scrollbar-width: thin;
      scrollbar-color: rgba(0,0,0,.2) transparent;
    }
    
    .company-select::-webkit-scrollbar {
      width: 6px;
    }
    
    .company-select::-webkit-scrollbar-thumb {
      background-color: rgba(0,0,0,.2);
      border-radius: 3px;
    }
    
    .card {
      height: 100%;
      display: flex;
      flex-direction: column;
    }
    
    .card-body {
      flex: 1;
    }
    
    /* Footer styles */
    .footer {
      background: #f8f9fa;
      padding: 3rem 0;
      margin-top: 4rem;
      border-top: 1px solid #e9ecef;
    }
    
    .footer-content {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 2rem;
    }
    
    .footer-section h5 {
      font-size: 1.1rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: var(--primary-color);
    }
    
    .footer-section p {
      color: #6c757d;
      font-size: 0.95rem;
      line-height: 1.6;
    }
    
    .footer-links {
      list-style: none;
      padding: 0;
      margin: 0;
    }
    
    .footer-links li {
      margin-bottom: 0.5rem;
    }
    
    .footer-links a {
      color: #6c757d;
      text-decoration: none;
      transition: color 0.2s;
    }
    
    .footer-links a:hover {
      color: var(--primary-color);
    }
    
    .footer-bottom {
      text-align: center;
      padding-top: 2rem;
      margin-top: 2rem;
      border-top: 1px solid #e9ecef;
      color: #6c757d;
      font-size: 0.9rem;
    }
    
    @media (max-width: 768px) {
      .footer {
        padding: 2rem 0;
        margin-top: 2rem;
      }
      
      .footer-content {
        grid-template-columns: 1fr;
        gap: 1.5rem;
      }
    }
  `
}) %>

<!-- Modal -->
<div class="modal fade" id="actionModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Chọn thao tác</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <h6 class="company-name mb-4"></h6>
        <div class="d-grid gap-3">
          <button type="button" class="btn btn-primary btn-lg notify-btn">
            <i class="bi bi-bell"></i> Nhắc nhở lịch cúp điện
          </button>
          <button type="button" class="btn btn-info btn-lg" onclick="showScheduleModal()">
            <i class="bi bi-calendar"></i> Xem lịch cúp điện
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Schedule Modal -->
<div class="modal fade" id="scheduleModal" tabindex="-1">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Lịch Cúp Điện</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <div class="d-flex align-items-center gap-3 mb-4">
          <div class="flex-grow-1">
            <h6 class="company-name mb-0"></h6>
          </div>
          <input type="date" class="form-control w-auto" id="scheduleDate">
        </div>
        <div id="scheduleContent" class="table-responsive">
          <div class="text-center">Đang tải dữ liệu...</div>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="container">
  <!-- Page Header -->
  <div class="page-header">
    <div class="container">
      <h1 class="page-title">Theo dõi Lịch Cúp Điện</h1>
      <p class="page-subtitle">
        Nhận thông báo qua email khi có lịch cúp điện mới tại khu vực bạn quan tâm
      </p>
    </div>
  </div>

  <!-- Stats Card -->
  <div class="stats-card mb-4">
    <div class="stats-icon">
      <i class="bi bi-bell"></i>
    </div>
    <div class="stats-content">
      <strong><%= subscriptions.length %>/<%= maxSubscriptions %> khu vực</strong>
      <span class="text-muted">Bạn có thể theo dõi thêm <%= maxSubscriptions - subscriptions.length %> khu vực nữa</span>
    </div>
  </div>

  <!-- Developer Section -->
  <div class="container">
    <div class="dev-section">
      <div class="dev-header" onclick="toggleDevMode()" id="devHeader">
        <i class="bi bi-chevron-down"></i>
        <h6 class="mb-0">
          Developer Tools
        </h6>
      </div>
      <div class="dev-content collapse" id="devContent">
        <div class="api-key-section">
          <div class="flex-grow-1">
            <small class="text-muted d-block mb-1">API Authentication Key</small>
            <code id="googleId" class="user-select-all">
              <span id="maskedId"><%= user.google_id.substring(0, 6) %>•••••••••••</span>
              <span id="fullId" style="display: none"><%= user.google_id %></span>
            </code>
          </div>
          <div class="d-flex gap-2">
            <button class="btn btn-light btn-sm" onclick="toggleGoogleId()" title="Hiện/Ẩn">
              <i class="bi bi-eye" id="toggleIcon"></i>
            </button>
            <button class="btn btn-light btn-sm" onclick="copyGoogleId()" title="Copy">
              <i class="bi bi-clipboard"></i>
            </button>
          </div>
        </div>
        <a href="/api" class="api-docs-link">
          <i class="bi bi-book"></i>
          Xem tài liệu API
        </a>
      </div>
    </div>
  </div>

  <% if (subscriptions.length < maxSubscriptions) { %>
    <div class="row subscription-steps g-4">
      <!-- Chọn miền -->
      <div class="col-md-4">
        <div class="card">
          <div class="card-header">
            <h5 class="mb-0">
              <i class="bi bi-geo-alt me-2"></i>
              Chọn khu vực
            </h5>
          </div>
          <div class="card-body company-select">
            <div class="company-item zone-item <%= !selectedZone ? 'selected' : '' %>" 
                 data-zone="">
              Tất cả khu vực
            </div>
            <div class="company-item zone-item <%= selectedZone === 'mien_bac' ? 'selected' : '' %>"
                 data-zone="mien_bac">
              Miền Bắc
            </div>
            <div class="company-item zone-item <%= selectedZone === 'mien_trung' ? 'selected' : '' %>"
                 data-zone="mien_trung">
              Miền Trung
            </div>
            <div class="company-item zone-item <%= selectedZone === 'mien_nam' ? 'selected' : '' %>"
                 data-zone="mien_nam">
              Miền Nam
            </div>
          </div>
        </div>
      </div>

      <!-- Chọn công ty điện lực -->
      <div class="col-md-4">
        <div class="card">
          <div class="card-header">
            <h5 class="mb-0">2. Chọn công ty điện lực</h5>
          </div>
          <div class="card-body company-select" id="companyList">
            <div class="text-center">Vui lòng chọn khu vực</div>
          </div>
        </div>
      </div>

      <!-- Chọn điện lực -->
      <div class="col-md-4">
        <div class="card">
          <div class="card-header">
            <h5 class="mb-0">3. Chọn điện lực</h5>
          </div>
          <div class="card-body company-select" id="subCompanyList">
            <div class="text-center">Vui lòng chọn công ty điện lực</div>
          </div>
        </div>
      </div>
    </div>

    <form id="subscriptionForm" action="/subscriptions" method="POST">
      <input type="hidden" name="ma_cong_ty_con" id="selectedCompanyCon">
      <input type="hidden" name="type" id="subscriptionType">
    </form>
  <% } %>

  <div class="mt-4">
    <h2 class="d-flex align-items-center gap-2 mb-4">
      <i class="bi bi-bell"></i>
      Khu vực đang theo dõi
    </h2>
    <% if (subscriptions.length === 0) { %>
      <div class="alert alert-warning">
        Bạn chưa đăng ký theo dõi công ty nào
      </div>
    <% } else { %>
      <div class="table-responsive">
        <table class="table">
          <thead>
            <tr>
              <th>Công ty</th>
              <th>Ngày đăng ký</th>
              <th>Thao tác</th>
            </tr>
          </thead>
          <tbody>
            <% subscriptions.forEach(function(sub) { %>
              <tr>
                <td><%= sub.ten_cong_ty_con %></td>
                <td><%= new Date(sub.created_at).toLocaleString('vi-VN') %></td>
                <td>
                  <div class="d-flex gap-2 action-buttons">
                    <button type="button" class="btn btn-sm btn-info" 
                            onclick="showScheduleDirectly('<%= sub.ma_cong_ty_con %>', '<%= sub.ten_cong_ty_con %>')">
                      <i class="bi bi-calendar"></i> Xem lịch
                    </button>
                    <form action="/subscriptions/<%= sub.id %>" method="POST">
                      <input type="hidden" name="_method" value="DELETE">
                      <button type="submit" class="btn btn-sm btn-danger" 
                              onclick="return confirm('Bạn có chắc muốn hủy đăng ký?')">
                        <i class="bi bi-trash"></i> Hủy đăng ký
                      </button>
                    </form>
                  </div>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>
    <% } %>
  </div>
</div>

<!-- Footer -->
<footer class="footer">
  <div class="container">
    <div class="footer-content">
      <div class="footer-section">
        <h5>Về Lịch Cúp Điện</h5>
        <p>
          Dịch vụ thông báo lịch cúp điện tự động, giúp bạn luôn cập nhật 
          thông tin mới nhất về lịch cúp điện tại khu vực quan tâm.
        </p>
      </div>
      
      <div class="footer-section">
        <h5>Tính năng</h5>
        <ul class="footer-links">
          <li><a href="#"><i class="bi bi-bell me-2"></i>Thông báo qua email</a></li>
          <li><a href="#"><i class="bi bi-geo-alt me-2"></i>Theo dõi nhiều khu vực</a></li>
          <li><a href="#"><i class="bi bi-clock-history me-2"></i>Cập nhật liên tục</a></li>
          <li><a href="#"><i class="bi bi-shield-check me-2"></i>Thông tin chính xác</a></li>
        </ul>
      </div>
      
      <div class="footer-section">
        <h5>Liên kết</h5>
        <ul class="footer-links">
          <li><a href="/api">API Documentation</a></li>
          <li><a href="/terms">Điều khoản sử dụng</a></li>
          <li><a href="/privacy">Chính sách bảo mật</a></li>
          <li><a href="/data-sources">Nguồn dữ liệu</a></li>
          <li><a href="#">Hướng dẫn sử dụng</a></li>
        </ul>
      </div>
      
      <div class="footer-section">
        <h5>Hỗ trợ</h5>
        <ul class="footer-links">
          <li><a href="#"><i class="bi bi-envelope me-2"></i>support@lichcupdien.com</a></li>
          <li><a href="#"><i class="bi bi-github me-2"></i>GitHub Repository</a></li>
          <li><a href="#"><i class="bi bi-question-circle me-2"></i>FAQ</a></li>
        </ul>
      </div>
    </div>
    
    <div class="footer-bottom">
      <p>© <%= new Date().getFullYear() %> Lịch Cúp Điện. All rights reserved.</p>
    </div>
  </div>
</footer>

<script defer>
function toggleGoogleId() {
  const maskedId = document.getElementById('maskedId');
  const fullId = document.getElementById('fullId');
  const toggleIcon = document.getElementById('toggleIcon');
  
  if (maskedId.style.display === 'none') {
    maskedId.style.display = 'inline';
    fullId.style.display = 'none';
    toggleIcon.classList.remove('bi-eye-slash');
    toggleIcon.classList.add('bi-eye');
  } else {
    maskedId.style.display = 'none';
    fullId.style.display = 'inline';
    toggleIcon.classList.remove('bi-eye');
    toggleIcon.classList.add('bi-eye-slash');
  }
}

async function copyGoogleId() {
  const fullId = document.getElementById('fullId').textContent;
  
  try {
    await navigator.clipboard.writeText(fullId);
    
    // Show tooltip
    const btn = event.currentTarget;
    const originalHtml = btn.innerHTML;
    btn.innerHTML = '<i class="bi bi-check text-success"></i>';
    
    setTimeout(() => {
      btn.innerHTML = originalHtml;
    }, 2000);
  } catch (err) {
    console.error('Failed to copy:', err);
  }
}

function toggleDevMode() {
  const devContent = document.getElementById('devContent');
  const devHeader = document.getElementById('devHeader');
  const isVisible = devContent.classList.contains('show');
  
  if (isVisible) {
    devContent.classList.remove('show');
    devHeader.classList.add('collapsed');
  } else {
    devContent.classList.add('show');
    devHeader.classList.remove('collapsed');
  }
  
  // Save preference
  localStorage.setItem('devMode', !isVisible);
}

document.addEventListener('DOMContentLoaded', function() {
  let selectedZone = '<%= selectedZone || "" %>';
  let selectedCompany = '<%= selectedCompany || "" %>';
  const subscriptions = <%- JSON.stringify(subscriptions) %>;
  const actionModal = new bootstrap.Modal(document.getElementById('actionModal'));
  const scheduleModal = new bootstrap.Modal(document.getElementById('scheduleModal'));
  let selectedCompanyCon = null;
  let currentCompanyInfo = null;

  // Hàm mở trực tiếp modal lịch
  window.showScheduleDirectly = async function(maCongTyCon, tenCongTyCon) {
    currentCompanyInfo = {
      id: maCongTyCon,
      name: tenCongTyCon
    };
    
    // Set default date to today
    const today = new Date().toISOString().split('T')[0];
    document.getElementById('scheduleDate').value = today;
    
    // Update company name
    document.querySelectorAll('#scheduleModal .company-name')
      .forEach(el => el.textContent = tenCongTyCon);
    
    // Show modal and load data
    scheduleModal.show();
    await loadScheduleData(today);
  };

  function selectZone(zone) {
    selectedZone = zone;
    selectedCompany = '';
    
    // Reset danh sách công ty điện lực và điện lực
    document.querySelector('#subCompanyList').innerHTML = '<div class="text-center">Vui lòng chọn công ty điện lực</div>';
    
    if (zone) {
      document.querySelector('#companyList').innerHTML = '<div class="text-center">Đang tải...</div>';
      // Load danh sách công ty điện lực theo zone
      fetch(`/api/companies?zone=${zone}`, {
        headers: {
          'X-Google-ID': document.getElementById('fullId').textContent
        }
      })
        .then(res => res.json())
        .then(response => {
          if (!response.success) {
            throw new Error(response.error || 'Failed to fetch companies');
          }
          
          const companies = response.data.companies;
          const html = companies.map(company => `
            <div class="company-item" data-company-id="${company.id_cong_ty}">
              ${company.ten_cong_ty}
            </div>
          `).join('');
          document.querySelector('#companyList').innerHTML = html || '<div class="text-center">Không có dữ liệu</div>';
          
          // Thêm event listeners cho các công ty mới
          document.querySelectorAll('#companyList .company-item').forEach(item => {
            item.addEventListener('click', () => selectCompany(item.dataset.companyId));
          });
        })
        .catch(error => {
          console.error('Error:', error);
          document.querySelector('#companyList').innerHTML = 
            '<div class="text-center text-danger">Có lỗi xảy ra khi tải dữ liệu</div>';
        });
    } else {
      document.querySelector('#companyList').innerHTML = '<div class="text-center">Vui lòng chọn khu vực</div>';
    }
    
    refreshUI();
  }

  function selectCompany(companyId) {
    selectedCompany = companyId;
    
    document.querySelector('#subCompanyList').innerHTML = '<div class="text-center">Đang tải...</div>';
    
    fetch(`/api/subcompanies?company=${companyId}`, {
      headers: {
        'X-Google-ID': document.getElementById('fullId').textContent
      }
    })
      .then(res => res.json())
      .then(response => {
        if (!response.success) {
          throw new Error(response.error || 'Failed to fetch sub-companies');
        }
        
        const companies = response.data.companies;
        const html = companies.map(company => {
          const isSubscribed = subscriptions
            .some(s => s.ma_cong_ty_con === company.ma_cong_ty_con);
          
          return `
            <div class="company-item">
              <div class="d-flex justify-content-between align-items-center">
                <div>${company.ten_cong_ty_con}</div>
                ${isSubscribed 
                  ? '<span class="badge bg-success">Đã đăng ký nhắc nhở</span>'
                  : `<button type="button" class="btn btn-sm btn-primary"
                            onclick="showActionModal('${company.ma_cong_ty_con}', '${company.ten_cong_ty_con}')"
                            title="Chọn thao tác">
                        Chọn thao tác
                      </button>`
                }
              </div>
            </div>
          `;
        }).join('');
        document.querySelector('#subCompanyList').innerHTML = html || '<div class="text-center">Không có dữ liệu</div>';
        
        // Thêm event listeners cho các công ty con mới
        document.querySelectorAll('#subCompanyList .company-item[data-can-subscribe]').forEach(item => {
          item.addEventListener('click', () => submitSubscription(item.dataset.companyCon));
        });
      });
    
    refreshUI();
  }

  window.showActionModal = function(maCongTyCon, tenCongTyCon) {
    selectedCompanyCon = maCongTyCon;
    currentCompanyInfo = {
      id: maCongTyCon,
      name: tenCongTyCon
    };
    
    // Cập nhật nội dung modal
    document.querySelector('#actionModal .company-name').textContent = tenCongTyCon;
      
    // Thêm event listener cho nút nhắc nhở
    document.querySelector('#actionModal .notify-btn').onclick = () => {
      submitSubscription(maCongTyCon, 'notify');
      actionModal.hide();
    };
    
    actionModal.show();
  }

  function submitSubscription(maCongTyCon, type) {
    document.getElementById('selectedCompanyCon').value = maCongTyCon;
    document.getElementById('subscriptionType').value = type;
    document.getElementById('subscriptionForm').submit();
  }

  function refreshUI() {
    document.querySelectorAll('.company-item').forEach(item => {
      item.classList.remove('selected');
    });
    
    if (selectedZone) {
      document.querySelector(`.company-item[data-zone="${selectedZone}"]`)?.classList.add('selected');
    }
  }
      
    // Thêm event listeners cho các khu vực
    document.querySelectorAll('.zone-item').forEach(item => {
      item.addEventListener('click', () => selectZone(item.dataset.zone));
    });

  window.showScheduleModal = async function() {
    actionModal.hide();
    scheduleModal.show();
    
    // Set default date to today
    const today = new Date().toISOString().split('T')[0];
    document.getElementById('scheduleDate').value = today;
    
    // Update company name
    document.querySelectorAll('#scheduleModal .company-name')
      .forEach(el => el.textContent = currentCompanyInfo.name);
    
    // Load initial data
    await loadScheduleData(today);
  };

  window.loadScheduleData = async function(date) {
    const scheduleContent = document.getElementById('scheduleContent');
    scheduleContent.innerHTML = '<div class="text-center">Đang tải dữ liệu...</div>';
    
    try {
      // Đảm bảo date là ngày đầu ngày (00:00:00)
      const startDate = new Date(date);
      startDate.setHours(0, 0, 0, 0);

      // Lấy ngày kết thúc là cuối ngày sau 7 ngày
      const endDate = new Date(startDate);
      endDate.setDate(endDate.getDate() + 7);
      endDate.setHours(23, 59, 59, 999);

      const response = await fetch(
        `api/outages?ma_cong_ty_con=${currentCompanyInfo.id}&start_date=${startDate.toISOString()}&end_date=${endDate.toISOString()}`,
        {
          headers: {
            'X-Google-ID': document.getElementById('fullId').textContent
          }
        }
      );
      
      const data = await response.json();
      
      if (!data.success) {
        throw new Error(data.error || 'Failed to fetch schedule');
      }
      
      const items = data.data.items;
      
      if (items.length === 0) {
        scheduleContent.innerHTML = `
          <div class="no-data">
            <i class="bi bi-calendar-x fs-1 d-block mb-2"></i>
            Không có lịch cúp điện nào từ ${new Date(date).toLocaleDateString('vi-VN')} 
            đến ${endDate.toLocaleDateString('vi-VN')}
          </div>
        `;
        return;
      }
      
      // Sắp xếp items theo thời gian bắt đầu
      items.sort((a, b) => new Date(a.thoi_gian_bat_dau) - new Date(b.thoi_gian_bat_dau));

      const html = `
        <table class="table schedule-table">
          <thead>
            <tr>
              <th>Ngày</th>
              <th>Thời gian</th>
              <th>Khu vực</th>
              <th>Lý do</th>
            </tr>
          </thead>
          <tbody>
            ${items.map(item => {
              const date = new Date(item.thoi_gian_bat_dau);
              const startTime = date.toLocaleTimeString('vi-VN');
              const endTime = new Date(item.thoi_gian_ket_thuc).toLocaleTimeString('vi-VN');
              return `
                <tr>
                  <td>${date.toLocaleDateString('vi-VN')}</td>
                  <td>
                    ${startTime} - ${endTime}
                  </td>
                  <td>${item.khu_vuc}</td>
                  <td>${item.ly_do}</td>
                </tr>
              `;
            }).join('')}
          </tbody>
        </table>
      `;
      
      scheduleContent.innerHTML = html;
    } catch (error) {
      console.error('Error:', error);
      scheduleContent.innerHTML = `
        <div class="alert alert-danger">
          Có lỗi xảy ra khi tải dữ liệu. Vui lòng thử lại sau.
        </div>
      `;
    }
  };

  // Add event listener for date change
  document.getElementById('scheduleDate').addEventListener('change', (e) => {
    loadScheduleData(e.target.value);
  });

  // Restore dev mode state
  document.addEventListener('DOMContentLoaded', function() {
    const devMode = localStorage.getItem('devMode') === 'true';
    if (devMode) {
      document.getElementById('devContent').classList.add('show');
      document.getElementById('devHeader').classList.remove('collapsed');
    }
  });
});
</script>

<!-- Rest of the body content -->
</body>
</html> 